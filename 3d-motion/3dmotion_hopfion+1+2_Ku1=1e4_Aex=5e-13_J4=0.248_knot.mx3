CellSize	:= 0.5e-9
SetGridSize(100, 100, 100)
SetCellSize(CellSize, CellSize, CellSize)
DefRegion(1, XRange(24.5e-9, 25e-9))
DefRegion(2, XRange(-25e-9, -24.5e-9))
OpenBC		= true
EnableDemag	= false

// MnSi parameters
Ms		:= 1.51e5
Msat		= Ms
A		:= 0.5e-12
Aex		= -A
//Kc1		= 1e3
//anisC1	= vector(1, 0, 0)
//anisC2	= vector(0, 1, 0)
Ku1		= 1e4
anisU		= vector(0, 0, 1)
alpha		= 0.005
//Dbulk		= 0.115e-3

// Extra Exchange Field (J4)
mx2		:= Shifted(m,2,0,0)
mx_2		:= Shifted(m,-2,0,0)
my2		:= Shifted(m,0,2,0)
my_2		:= Shifted(m,0,-2,0)
mz2		:= Shifted(m,0,0,2)
mz_2		:= Shifted(m,0,0,-2)
laplacian2	:= Add(Add(Add(Add(Add(mx2, mx_2), my2), my_2), mz2), mz_2)

Bex		:= A*0.248
BField		:= Mul( Const(-2.0/Ms * Bex/(CellSize*CellSize)), laplacian2)
BEdens		:= Mul( Const(Bex/(CellSize*CellSize)), Dot(laplacian2, m))

AddFieldTerm(BField)
AddEdensTerm(BEdens)

// Spin Configuration
m.LoadFile("stable-state-h+1+2.ovf")

// Spin Wave
B_sw1		:= 2.0
B_sw2		:= 2.0
f_sw		:= 440e9 * 2*pi
phi_shift	:= pi*25./180
phi_curve_sum	:= -pi/4
t_sum		:= 0.0
t_unit		:= 3e-9
depth		:= 0.5



// Pre-translate the Hopfion
autosave(m, 0.5e-9)
phi_pretransl	:= -pi
t_inc		:= 2.0
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t), B_sw1 * sin(f_sw*t + phi_pretransl + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t), B_sw2 * sin(f_sw*t + phi_pretransl - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit




// Start the Simulation
autosave(m, 1e-10)



phi_offset	:= 0.0
phi_curve_deriv	:= 0.0
t_inc		= 3.0
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t) * (1 - depth * cos(pi * (t  - t_sum)/ t_unit + phi_offset)),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc




phi_curve_deriv	= 2
t_inc		= pi / 2
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc



phi_offset	= pi
phi_curve_deriv	= 0
t_inc		= 3
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t) * (1 - depth * cos(pi * (t  - t_sum)/ t_unit + phi_offset)),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc




phi_curve_deriv	= -2
t_inc		= pi / 2
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc



phi_offset	= 0
phi_curve_deriv	= 0
t_inc		= 3
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t) * (1 - depth * cos(pi * (t  - t_sum)/ t_unit + phi_offset)),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc




phi_curve_deriv	= 2
t_inc		= pi * 3 / 4
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc



phi_offset	= pi
phi_curve_deriv	= 0
t_inc		= 3
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t) * (1 - depth * cos(pi * (t  - t_sum)/ t_unit + phi_offset)),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc




phi_curve_deriv	= -2
t_inc		= pi / 2
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc



phi_offset	= 0
phi_curve_deriv	= 0
t_inc		= 3
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t) * (1 - depth * cos(pi * (t  - t_sum)/ t_unit + phi_offset)),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc




phi_curve_deriv	= 2
t_inc		= pi / 2
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc



phi_offset	= pi
phi_curve_deriv	= 0
t_inc		= 3
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t) * (1 - depth * cos(pi * (t  - t_sum)/ t_unit + phi_offset)),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc




phi_curve_deriv	= -2
t_inc		= pi * 3 / 4
B_ext.setRegion(1, Vector(B_sw1 * sin(f_sw*t),
			B_sw1 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit + phi_shift), 0))
B_ext.setRegion(2, Vector(B_sw2 * sin(f_sw*t),
			B_sw2 * sin(f_sw*t + phi_curve_sum + phi_curve_deriv*(t - t_sum)/t_unit - phi_shift), 0))
run(t_inc * t_unit)
t_sum		+= t_inc * t_unit
phi_curve_sum	+= phi_curve_deriv * t_inc
